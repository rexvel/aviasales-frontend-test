{"version":3,"sources":["logo.svg","routes.js","actions/fetchSearchId.js","actions/fetchTickets.js","actions/refresh.js","actions/filters.js","actions/sorts.js","reducers/fetchTicketsState.js","reducers/fetchSearchState.js","reducers/refreshState.js","reducers/pollingState.js","reducers/stopsFilter.js","reducers/tickets.js","reducers/sorts.js","reducers/index.js","utils/index.js","consts.js","selectors/index.js","components/Filter/Header.jsx","components/Filter/Content.jsx","components/Filter/Item.jsx","components/Filter/Message.jsx","components/Filter/index.jsx","components/StopsFilter.jsx","components/Sorting/Tab.jsx","components/Sorting/index.jsx","components/SortingMenu.jsx","components/PageHeader/index.jsx","components/Ticket/Placeholder.jsx","components/Ticket/Header.jsx","components/Ticket/Segment.jsx","components/Ticket/Body.jsx","components/Ticket/index.jsx","components/TicketsList.jsx","components/Notify/index.jsx","components/NotifyBar.jsx","components/TicketsLoader/index.jsx","components/LoadingBar.jsx","components/App.jsx","index.js"],"names":["module","exports","host","baseURL","method","url","searchId","params","fetchSearchIdRequest","createAction","fetchSearchIdFailure","fetchSearchIdSuccess","initSearch","dispach","a","async","searchUrl","routes","axios","request","response","data","fetchTicketsRequest","fetchTicketsFailure","fetchTicketsSuccess","longPollingFinished","refreshRequest","refreshSuccess","requireRefresh","setRefreshTimerId","toggleAllStopsFilters","toggleStopFilter","handleActions","actions","state","refreshTimerId","payload","refreshStatus","defaultState","counter","firstFetch","oldSetAll","selectAll","oldByStops","byStops","Object","keys","reduce","acc","key","value","inverted","includes","0","1","2","3","tickets","combineReducers","fetchTicketsState","fetchSearchState","refreshState","pollingState","stopsFilter","sorts","getTimeFromDate","date","timeZone","options","hour","minute","Date","toLocaleTimeString","declinationHelper","amount","textForms","zeroForm","rem","TICKETS_FORMS","STOPS_FORMS","getAllTickets","getStopsFilter","getSorts","ticketsByStopsSelector","createSelector","allTickets","groupBy","t","segments","allStops","map","stops","length","Math","max","maxStops","availableFiltersSelector","label","isChecked","filteredTicketsSelector","active","filter","stop","sortedTicketsSelector","sorting","sortBy","duration","getTotalDuration","Header","children","className","Content","Item","handleKeyPress","event","preventDefault","handleChange","invoke","props","this","onKeyDown","onChange","type","React","PureComponent","Message","title","Filter","actionsList","StopsFilter","handleChangeAll","e","possibleFilters","checked","connect","Tab","handleClick","onClick","cn","tabIndex","Sorting","tabs","setSorting","SortingMenu","activeTab","tab","Component","href","alt","src","logo","Placeholder","fluid","Line","Segment","price","carrier","carrierSrc","formatedPrice","priceSep","toString","replace","formatPrice","segment","routeTitle","origin","destination","stopsTitle","timeInMin","hh","floor","mm","formatDuration","interval","dateString","startTime","parse","endTime","formatedStartTime","formatedEndTime","formatTimeInterval","citys","join","Body","uniqueId","Ticket","ticket","defaultProps","TicktsList","clearTimeout","times","allTicketsAmount","totalAmount","filterMsgTitle","renderTickets","slice","Notify","color","message","refresh","NotifyBar","fetchTickets","ticketsUrl","Promise","resolve","setTimeout","TicketsLoader","Progress","size","indicating","total","App","sm","md","TicketsList","setConfiguration","defaultScreenClass","gutterWidth","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","dispatch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.660812cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0c089234.svg\";","const host = 'https://front-test.beta.aviasales.ru';\r\n\r\nexport default {\r\n  search: () => ({\r\n    baseURL: host,\r\n    method: 'get',\r\n    url: 'search',\r\n  }),\r\n  tickets: (searchId) => ({\r\n    baseURL: host,\r\n    method: 'get',\r\n    url: 'tickets',\r\n    params: {\r\n      searchId,\r\n    },\r\n  }),\r\n};","import axios from 'axios';\r\nimport { createAction } from 'redux-actions';\r\nimport routes from '../routes';\r\n\r\nexport const fetchSearchIdRequest = createAction('FETCH_SEARCH_ID_REQUEST');\r\nexport const fetchSearchIdFailure = createAction('FETCH_SEARCH_ID_FAILURE');\r\nexport const fetchSearchIdSuccess = createAction('FETCH_SEARCH_ID_SUCCESS');\r\n\r\nexport const initSearch = () => async (dispach) => {\r\n  dispach(fetchSearchIdRequest());\r\n  try {\r\n    const searchUrl = routes.search();\r\n    const response = await axios.request(searchUrl);\r\n    const { data: { searchId } } = response;\r\n    dispach(fetchSearchIdSuccess({ searchId }));\r\n  } catch (err) {\r\n    dispach(fetchSearchIdFailure());\r\n    throw err;\r\n  }\r\n};","import axios from 'axios';\r\nimport { createAction } from 'redux-actions';\r\nimport routes from '../routes';\r\n\r\nexport const fetchTicketsRequest = createAction('FETCH_TICKETS_REQUEST');\r\nexport const fetchTicketsFailure = createAction('FETCH_TICKETS_FAILURE');\r\nexport const fetchTicketsSuccess = createAction('FETCH_TICKETS_SUCCESS');\r\n\r\nexport const longPollingFinished = createAction('LONG_POLLING_FINISHED');\r\n\r\nexport const fetchTickets = (searchId) => async (dispach) => {\r\n  dispach(fetchTicketsRequest());\r\n  try {\r\n    const ticketsUrl = routes.tickets(searchId);\r\n    const response = await axios.request(ticketsUrl);\r\n    const { data: { tickets, stop } } = response;\r\n    dispach(fetchTicketsSuccess({ tickets }));\r\n    stop\r\n      ? dispach(longPollingFinished())\r\n      : dispach(fetchTickets(searchId));\r\n  } catch (err) {\r\n    dispach(fetchTicketsFailure());\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n    dispach(fetchTickets(searchId));\r\n    throw err;\r\n  }\r\n};","import { createAction } from 'redux-actions';\r\nimport { initSearch } from './fetchSearchId';\r\n\r\nexport const refreshRequest = createAction('REFRESH_REQUEST');\r\nexport const refreshSuccess = createAction('REFRESH_SUCCESS');\r\nexport const requireRefresh = createAction('REFRESH_REQUIRE');\r\n\r\nexport const setRefreshTimerId = createAction('REFRESH_SET_TIMER_ID');\r\n\r\nexport const refresh = () => async (dispach) => {\r\n  dispach(refreshRequest());\r\n  await dispach(initSearch());\r\n};","import { createAction } from 'redux-actions';\r\n\r\nexport const toggleAllStopsFilters = createAction('FILTER_STOPS_ALL_TOGGLE');\r\nexport const toggleStopFilter = createAction('FILTER_STOP_TOGGLE');\r\n","import { createAction } from 'redux-actions';\r\n\r\nexport default createAction('SET_SORTING');\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nexport default handleActions({\r\n  [actions.fetchTicketsRequest]: () => 'requested',\r\n  [actions.fetchTicketsFailure]: () => 'failed',\r\n  [actions.fetchTicketsSuccess]: () => 'finished',\r\n}, 'none');\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nexport default handleActions({\r\n  [actions.fetchSearchIdRequest]: () => 'requested',\r\n  [actions.fetchSearchIdFailure]: () => 'failed',\r\n  [actions.fetchSearchIdSuccess]: () => 'received',\r\n  [actions.longPollingFinished]: () => 'finished',\r\n}, 'none');\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst defaultState = { refreshStatus: 'fresh', refreshTimerId: '' };\r\n\r\nexport default handleActions({\r\n  [actions.setRefreshTimerId]: (state, { payload: { refreshTimerId } }) => ({\r\n    ...state,\r\n    refreshTimerId,\r\n  }),\r\n  [actions.refreshRequest]: (state) => ({ ...state, refreshStatus: 'refreshing' }),\r\n  [actions.refreshSuccess]: (state) => ({ ...state, refreshStatus: 'fresh' }),\r\n  [actions.requireRefresh]: (state) => ({ ...state, refreshStatus: 'needsRefresh' }),\r\n}, defaultState);\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst defaultState = { searchId: '', counter: 0, firstFetch: true };\r\n\r\nexport default handleActions({\r\n  [actions.fetchSearchIdSuccess]: (state, { payload: { searchId } }) => ({\r\n    ...state,\r\n    searchId,\r\n  }),\r\n  [actions.fetchTicketsSuccess]: (state) => ({\r\n    ...state,\r\n    counter: state.counter + 1,\r\n    firstFetch: state.firstFetch && false,\r\n  }),\r\n  [actions.refreshRequest]: () => defaultState,\r\n}, defaultState);\r\n","import { handleActions } from 'redux-actions';\r\nimport { includes } from 'lodash';\r\nimport * as actions from '../actions';\r\n\r\nexport default handleActions({\r\n  [actions.toggleAllStopsFilters]: (state) => {\r\n    const { selectAll: oldSetAll, byStops: oldByStops } = state;\r\n    const selectAll = !oldSetAll;\r\n    const byStops = Object.keys(oldByStops)\r\n      .reduce((acc, key) => ({ ...acc, [key]: selectAll }), {});\r\n\r\n    return { selectAll, byStops };\r\n  },\r\n  [actions.toggleStopFilter]: (state, { payload: { value } }) => {\r\n    const { byStops: oldByStops } = state;\r\n    const inverted = !oldByStops[value];\r\n    const byStops = { ...oldByStops, [value]: inverted };\r\n    const selectAll = !includes(byStops, false);\r\n\r\n    return { selectAll, byStops };\r\n  },\r\n}, {\r\n  selectAll: true,\r\n  byStops: { 0: true, 1: true, 2: true, 3: true },\r\n });\r\n ","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nexport default handleActions({\r\n  [actions.fetchTicketsSuccess]: (state, { payload: { tickets } }) => ([\r\n    ...state,\r\n    ...tickets,\r\n  ]),\r\n  [actions.refreshRequest]: () => [],\r\n}, []);\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nexport default handleActions({\r\n  [actions.setSorting]: (state, { payload: { value } }) => (value),\r\n}, 'cheap');\r\n","import { combineReducers } from 'redux';\r\nimport fetchTicketsState from './fetchTicketsState';\r\nimport fetchSearchState from './fetchSearchState';\r\nimport refreshState from './refreshState';\r\nimport pollingState from './pollingState';\r\nimport stopsFilter from './stopsFilter';\r\nimport tickets from './tickets';\r\nimport sorts from './sorts';\r\n\r\nexport default combineReducers({\r\n  fetchTicketsState,\r\n  fetchSearchState,\r\n  refreshState,\r\n  pollingState,\r\n  stopsFilter,\r\n  tickets,\r\n  sorts,\r\n});","export const maxStops = (segments = []) => {\r\n  const allStops = segments.map(({ stops }) => stops.length);\r\n\r\n  return Math.max(...allStops);\r\n};\r\n\r\nexport const getTotalDuration = (segments = []) => (\r\n  segments.reduce((acc, { duration }) => (acc + duration), 0)\r\n);\r\n\r\nexport const getTimeFromDate = (date, timeZone = 'UTC') => {\r\n  const options = {\r\n    timeZone, hour: 'numeric', minute: 'numeric'};\r\n\r\n  return new Date(date).toLocaleTimeString('ru', options);\r\n};\r\n\r\nexport const formatTimeInterval = (dateString, duration, timeZone) => {\r\n  const startTime = Date.parse(dateString);\r\n  const endTime = startTime + (60 * 1000 * duration);\r\n  const formatedStartTime = getTimeFromDate(startTime, timeZone);\r\n  const formatedEndTime = getTimeFromDate(endTime, timeZone);\r\n\r\n  return `${formatedStartTime} — ${formatedEndTime}`;\r\n};\r\n\r\nexport const formatDuration = (timeInMin = 0) => {\r\n  const hh = Math.floor(timeInMin / 60);\r\n  const mm = hh === 0 ? timeInMin : timeInMin - hh * 60;\r\n\r\n  return `${hh}ч ${mm}м`;\r\n};\r\n\r\nexport const formatPrice = (price = 0) => {\r\n  const priceSep = price\r\n    .toString()\r\n    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1 \");\r\n\r\n  return priceSep;\r\n};\r\n\r\nexport const declinationHelper = (amount, textForms, zeroForm) => {\r\n  const rem = amount % 100;\r\n  const key = rem > 20 ? rem % 10 : rem;\r\n\r\n  switch (true) {\r\n    case key === 1:\r\n      return `${amount} ${textForms[0]}`;\r\n\r\n    case key >= 2 && key <= 4:\r\n      return `${amount} ${textForms[1]}`;\r\n\r\n    case key >= 5 && key <= 20:\r\n      return `${amount} ${textForms[2]}`;\r\n\r\n    case key === 0 && +amount !== 0:\r\n      return `${amount} ${textForms[2]}`;\r\n\r\n    default:\r\n      return zeroForm\r\n        ? `${zeroForm}`\r\n        : `${amount} ${textForms[2]}`;\r\n  }\r\n};\r\n","export const TIME_TO_REFRESH = 60000;\r\n\r\nexport const DEFAULT_TIME_ZONE = 'Europe/Moscow';\r\n\r\nexport const TICKETS_FORMS = ['билет', 'билета', 'билетов'];\r\n\r\nexport const STOPS_FORMS = [\r\n  ['пересадка', 'пересадки', 'пересадок'],\r\n  'Без пересадок',\r\n];\r\n","import { createSelector } from 'reselect';\r\nimport { sortBy, groupBy } from 'lodash';\r\nimport { getTotalDuration, declinationHelper, maxStops } from '../utils';\r\nimport { STOPS_FORMS } from '../consts';\r\n\r\nexport const getAllTickets = (state) => state.tickets;\r\nexport const getStopsFilter = (state) => state.stopsFilter;\r\nexport const getSorts = (state) => state.sorts;\r\n\r\nexport const ticketsByStopsSelector = createSelector(\r\n  [getAllTickets],\r\n  (allTickets) => groupBy(allTickets, (t) => maxStops(t.segments)),\r\n);\r\n\r\nexport const availableFiltersSelector = createSelector(\r\n  [ticketsByStopsSelector, getStopsFilter],\r\n  (byStops, stopsFilter) => {\r\n    const keys = Object.keys(byStops);\r\n    const filters = keys.map((value) => {\r\n      const label = declinationHelper(value, ...STOPS_FORMS);\r\n      const isChecked = stopsFilter.byStops[value];\r\n\r\n      return { value, label, isChecked };\r\n    });\r\n    return filters;\r\n  },\r\n);\r\n\r\nexport const filteredTicketsSelector = createSelector(\r\n  [getAllTickets, ticketsByStopsSelector, getStopsFilter],\r\n  (allTickets, byStops, stopsFilter) => {\r\n    const keys = Object.keys(byStops);\r\n    const active = keys.filter((stop) => stopsFilter.byStops[stop]);\r\n    const tickets = stopsFilter.selectAll\r\n      ? allTickets\r\n      : active.reduce((acc, stop) => (\r\n        [...acc, ...byStops[stop]]\r\n      ), []);\r\n\r\n    return tickets;\r\n  },\r\n);\r\n\r\nexport const sortedTicketsSelector = createSelector(\r\n  [filteredTicketsSelector, getSorts],\r\n  (tickets, sorting) => (sorting === 'cheap'\r\n    ? sortBy(tickets, 'price')\r\n    : sortBy(tickets, ({ segments }) => getTotalDuration(segments))\r\n  ),\r\n);\r\n","import React from 'react';\r\nimport './styles/Filter.scss'\r\n\r\nconst Header = ({ children }) => (\r\n  <div className=\"filter-header\">{children}</div>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './styles/Filter.scss'\r\n\r\nconst Content = ({ children }) => (\r\n  <div className=\"filter-content\">{children}</div>\r\n);\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { invoke } from 'lodash';\r\nimport './styles/Item.scss';\r\n\r\nexport default class Item extends React.PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func,\r\n    checked: PropTypes.bool,\r\n    value: PropTypes.string,\r\n    label: PropTypes.node,\r\n  };\r\n\r\n  handleKeyPress = (event) => {\r\n    const { key } = event;\r\n    if (key === 'Enter' || key === ' ') {\r\n      event.preventDefault();\r\n      this.handleChange(event);\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    invoke(this.props, 'onChange', event, this.props);\r\n  }\r\n\r\n  render() {\r\n    const { label, ...props } = this.props;\r\n\r\n    return (\r\n      <div className=\"list-item\">\r\n        <label className=\"list-item-label\">\r\n          <span className=\"checkbox\">\r\n            <input\r\n              {...props}\r\n              onKeyDown={this.handleKeyPress}\r\n              onChange={this.handleChange}\r\n              className=\"checkbox-input\"\r\n              type=\"checkbox\"\r\n            />\r\n            <span className=\"checkbox-face\" />\r\n          </span>\r\n          {label}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles/Message.scss';\r\n\r\nexport default class Message extends React.PureComponent {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    const { title } = this.props;\r\n\r\n    return (\r\n      <div className=\"filter-message\">\r\n        <div className=\"filter-message-content\">\r\n          <div className=\"filter-message-title\">\r\n            {title}\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Content from './Content';\r\nimport Item from './Item';\r\nimport Message from './Message';\r\nimport './styles/Filter.scss'\r\n\r\nconst Filter = ({ children }) => (<div className=\"filter\">{children}</div>);\r\n\r\nFilter.Header = Header;\r\nFilter.Item = Item;\r\nFilter.Content = Content;\r\nFilter.Message = Message;\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport { getStopsFilter, availableFiltersSelector } from '../selectors';\r\nimport Filter from './Filter';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const selectAll = getStopsFilter(state).selectAll;\r\n  const possibleFilters = availableFiltersSelector(state);\r\n\r\n  return { selectAll, possibleFilters };\r\n};\r\n\r\nconst actionsList = {\r\n  toggleAllStopsFilters: actions.toggleAllStopsFilters,\r\n  toggleStopFilter: actions.toggleStopFilter,\r\n};\r\n\r\nclass StopsFilter extends React.PureComponent {\r\n  handleChangeAll = () => {\r\n    const { toggleAllStopsFilters } = this.props;\r\n    toggleAllStopsFilters();\r\n  }\r\n\r\n  handleChange = (e, { value }) => {\r\n    const { toggleStopFilter } = this.props;\r\n    toggleStopFilter({ value });\r\n  }\r\n\r\n  render() {\r\n    const { selectAll, possibleFilters } = this.props;\r\n\r\n    return (\r\n      <Filter>\r\n        <Filter.Header>\r\n          Количество пересадок\r\n        </Filter.Header>\r\n        <Filter.Content>\r\n          <Filter.Item\r\n            onChange={this.handleChangeAll}\r\n            checked={selectAll}\r\n            label=\"Все\"\r\n            value=\"all\"\r\n          />\r\n          {possibleFilters.map((filter) => (\r\n            <Filter.Item\r\n              onChange={this.handleChange}\r\n              checked={filter.isChecked}\r\n              key={filter.value}\r\n              value={filter.value}\r\n              label={filter.label}\r\n            />\r\n          ))}\r\n        </Filter.Content>\r\n      </Filter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionsList)(StopsFilter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { invoke } from 'lodash';\r\nimport cn from 'classnames';\r\nimport './Sorting.scss';\r\n\r\nexport default class Tab extends React.PureComponent {\r\n  static propTypes = {\r\n    onClick: PropTypes.func,\r\n    title: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n  };\r\n\r\n  handleKeyPress = (event) => {\r\n    const { key } = event;\r\n    if (key === 'Enter' || key === ' ') {\r\n      event.preventDefault();\r\n      this.handleClick(event);\r\n    }\r\n  }\r\n\r\n  handleClick = (event) => {\r\n    invoke(this.props, 'onClick', event, this.props);\r\n  }\r\n\r\n  render() {\r\n    const { active, title } = this.props;\r\n\r\n    return (\r\n      <li\r\n        onKeyDown={this.handleKeyPress}\r\n        onClick={this.handleClick}\r\n        className={cn('sorting-tabs-tab', { active })}\r\n        tabIndex=\"0\"\r\n      >\r\n        <span className=\"tab-title\">{title}</span>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Tab from './Tab';\r\nimport './Sorting.scss';\r\n\r\nconst Sorting = ({ children }) => (\r\n  <div className=\"sorting\">\r\n    <ul className=\"sorting-tabs\">\r\n      {children}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nSorting.Tab = Tab;\r\n\r\nexport default Sorting;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport { getSorts } from '../selectors';\r\nimport Sorting from './Sorting';\r\n\r\nconst tabs = [\r\n  { value: 'cheap', title: 'Самый дешевый' },\r\n  { value: 'fast', title: 'Самый быстрый' },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n  const activeTab = getSorts(state);\r\n\r\n  return { activeTab };\r\n};\r\n\r\nconst actionsList = {\r\n  setSorting: actions.setSorting,\r\n};\r\n\r\nclass SortingMenu extends React.Component {\r\n  handleClick = (e, { value }) => {\r\n    const { setSorting } = this.props;\r\n    setSorting({ value });\r\n  }\r\n\r\n  render() {\r\n    const { activeTab } = this.props;\r\n\r\n    return (\r\n      <Sorting>\r\n        {tabs.map((tab) => (\r\n          <Sorting.Tab\r\n            onClick={this.handleClick}\r\n            active={tab.value === activeTab}\r\n            key={tab.value}\r\n            value={tab.value}\r\n            title={tab.title}\r\n          />\r\n        ))}\r\n      </Sorting>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionsList)(SortingMenu);\r\n","import React from 'react';\r\nimport logo from '../../logo.svg'\r\nimport './PageHeader.scss'\r\n\r\nconst Header = () => (\r\n  <div className=\"page-header\">\r\n    <a\r\n      className=\"header-logo-link\"\r\n      href=\"/\"\r\n    >\r\n      <img\r\n        className=\"header-logo-img\"\r\n        alt=\"aviasales\"\r\n        src={logo}\r\n      />\r\n    </a>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Placeholder as UIPlaceholder } from 'semantic-ui-react'\r\nimport './Ticket.scss';\r\n\r\nconst Placeholder = () => (\r\n  <div className=\"ticket\">\r\n    <div className=\"ticket-placeholder\">\r\n      <UIPlaceholder fluid>\r\n        <UIPlaceholder.Header>\r\n          <UIPlaceholder.Line />\r\n          <UIPlaceholder.Line />\r\n        </UIPlaceholder.Header>\r\n        <div className=\"segment\">\r\n          <UIPlaceholder.Line />\r\n          <UIPlaceholder.Line />\r\n        </div>\r\n        <div className=\"segment\">\r\n          <UIPlaceholder.Line />\r\n          <UIPlaceholder.Line />\r\n        </div>\r\n      </UIPlaceholder>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Placeholder;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../../utils';\r\nimport './Ticket.scss';\r\n\r\n\r\nexport default class Segment extends React.Component {\r\n  static propTypes = {\r\n    price: PropTypes.number,\r\n    carrier: PropTypes.string,\r\n  }; \r\n\r\n  render() {\r\n    const { price, carrier } = this.props;\r\n    const carrierSrc = `//pics.avs.io/99/36/${carrier}.png`;\r\n    const formatedPrice = formatPrice(price);\r\n\r\n    return (\r\n      <div className=\"ticket-header\">\r\n        <div className=\"ticket-price\">{formatedPrice}</div>\r\n        <div className=\"ticket-carrier\">\r\n          <img\r\n            src={carrierSrc}\r\n            alt={carrier}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDuration, formatTimeInterval, declinationHelper } from '../../utils';\r\nimport { DEFAULT_TIME_ZONE, STOPS_FORMS } from '../../consts';\r\nimport './Ticket.scss';\r\n\r\n\r\nexport default class Segment extends React.Component {\r\n  static propTypes = {\r\n    segment: PropTypes.object,\r\n  };\r\n\r\n  render() {\r\n    const { segment } = this.props;\r\n    const routeTitle = `${segment.origin} — ${segment.destination}`;\r\n    const stopsTitle = declinationHelper(segment.stops.length, ...STOPS_FORMS);\r\n    const duration = formatDuration(segment.duration);\r\n    const interval = formatTimeInterval(segment.date, segment.duration, DEFAULT_TIME_ZONE);\r\n    const citys = segment.stops.length === 0 ? 'Прямой' : segment.stops.join(', ');\r\n\r\n    return (\r\n      <div className=\"segment\">\r\n        <div className=\"segment-content\">\r\n          <div className=\"segment-title\">{routeTitle}</div>\r\n          <div className=\"segment-description\">{interval}</div>\r\n        </div>\r\n        <div className=\"segment-content\">\r\n          <div className=\"segment-title\">В пути</div>\r\n          <div className=\"segment-description\">{duration}</div>\r\n        </div>\r\n        <div className=\"segment-content\">\r\n          <div className=\"segment-title\">{stopsTitle}</div>\r\n          <div className=\"segment-description\">{citys}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { uniqueId } from 'lodash';\r\nimport Segment from './Segment';\r\nimport './Ticket.scss';\r\n\r\n\r\nexport default class Body extends React.Component {\r\n  static propTypes = {\r\n    segments: PropTypes.array,\r\n  }; \r\n\r\n  render() {\r\n    const { segments } = this.props;\r\n\r\n    return (\r\n      <div className=\"ticket-body\">\r\n        {segments.map((segment) => (\r\n          <Segment key={uniqueId()} segment={segment} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Placeholder from './Placeholder';\r\nimport Header from './Header';\r\nimport Body from './Body';\r\nimport './Ticket.scss';\r\n\r\nconst defailtTicket = {\r\n  price: 66579,\r\n  carrier: 'FV',\r\n  segments: [\r\n    {\r\n      origin: 'MOW',\r\n      destination: 'HKT',\r\n      date: '2019-12-07T08:27:00.000Z',\r\n      stops: [\r\n        'SIN',\r\n        'AUH',\r\n        'KUL'\r\n      ],\r\n      duration: 1577\r\n    },\r\n    {\r\n      origin: 'MOW',\r\n      destination: 'HKT',\r\n      date: '2019-12-27T03:38:00.000Z',\r\n      stops: [],\r\n      duration: 1770\r\n    }\r\n  ]\r\n};\r\n\r\nclass Ticket extends React.Component {\r\n  static propTypes = {\r\n    ticket: PropTypes.object,\r\n  };\r\n\r\n  static defaultProps = {\r\n    ticket: defailtTicket,\r\n  };\r\n\r\n  render() {\r\n    const { ticket } = this.props;\r\n\r\n    return (\r\n      <div className=\"ticket\">\r\n        <Header\r\n          price={ticket.price}\r\n          carrier={ticket.carrier}\r\n        />\r\n        <Body segments={ticket.segments} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTicket.Placeholder = Placeholder;\r\n\r\nexport default Ticket;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { times, uniqueId } from 'lodash';\r\nimport { getAllTickets, sortedTicketsSelector } from '../selectors';\r\nimport { declinationHelper } from '../utils';\r\nimport { TICKETS_FORMS } from '../consts';\r\nimport Filter from './Filter';\r\nimport Ticket from './Ticket';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const tickets = sortedTicketsSelector(state).slice(0, 5);\r\n  const allTicketsAmount = getAllTickets(state).length;\r\n  const { firstFetch } = state.pollingState;\r\n  const { refreshTimerId } = state.refreshState;\r\n\r\n  return { tickets, firstFetch, allTicketsAmount, refreshTimerId };\r\n};\r\n\r\nclass TicktsList extends React.Component {\r\n  componentWillUnmount() {\r\n    const { refreshTimerId } = this.props;\r\n    clearTimeout(refreshTimerId);\r\n  }\r\n\r\n  renderTickets() {\r\n    const { tickets, firstFetch } = this.props;\r\n\r\n    return (\r\n      <div className=\"tickets-list\">\r\n        {firstFetch\r\n          ? times(5, () => (<Ticket.Placeholder key={uniqueId()} />))\r\n          : tickets.map((ticket) => <Ticket key={uniqueId()} ticket={ticket} />)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { tickets, firstFetch, allTicketsAmount } = this.props;\r\n    const totalAmount = declinationHelper(allTicketsAmount, TICKETS_FORMS);\r\n    const filterMsgTitle = `Мы нашли ${totalAmount}, но ни один не \r\n      соответствует заданным фильтрам.`;\r\n\r\n    return (\r\n      <>\r\n        {tickets.length > 0 || firstFetch\r\n          ? this.renderTickets()\r\n          : <Filter.Message title={filterMsgTitle} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TicktsList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { invoke } from 'lodash';\r\nimport cn from 'classnames';\r\nimport './Notify.scss'\r\n\r\nexport default class Notify extends React.Component {\r\n  static propTypes = {\r\n    message: PropTypes.node,\r\n    value: PropTypes.string,\r\n    color: PropTypes.string,\r\n  };\r\n\r\n  handleClick = (event) => {\r\n    invoke(this.props, 'onClick', event, this.props);\r\n  }\r\n\r\n  render() {\r\n    const { color, message, value } = this.props;\r\n\r\n    return (\r\n      <div className={cn('notify', color)}>\r\n        <div className=\"notify-content\">\r\n          <div className=\"notify-text\">{message}</div>\r\n          <button\r\n            onClick={this.handleClick}\r\n            className=\"notify-button\"\r\n          >\r\n            {value}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport Notify from './Notify'\r\nimport './Notify/Notify.scss'\r\n\r\nconst mapStateToProps = ({ refreshState }) => {\r\n  const { refreshStatus } = refreshState;\r\n  return { refreshStatus };\r\n};\r\n\r\nconst actionsList = {\r\n  refresh: actions.refresh,\r\n};\r\n\r\nclass NotifyBar extends React.Component {\r\n  handleClick = () => {\r\n    const { refresh } = this.props;\r\n    refresh();\r\n  }\r\n\r\n  render() {\r\n    const { refreshStatus } = this.props;\r\n    const isNeedsRefresh = refreshStatus === 'needsRefresh';\r\n    const msg = 'Цены могли измениться! Обновите поиск, чтобы увидеть актуальные цены.';\r\n\r\n    return (\r\n      isNeedsRefresh && <div className=\"notify-bar\">\r\n        <Notify\r\n          onClick={this.handleClick}\r\n          message={msg}\r\n          value=\"Обновить\"\r\n          color=\"red\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionsList)(NotifyBar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Progress } from 'semantic-ui-react';\r\nimport { TIME_TO_REFRESH } from '../../consts';\r\nimport * as actions from '../../actions';\r\nimport './TicketsLoader.scss'\r\n\r\nconst mapStateToProps = ({ pollingState }) => pollingState;\r\n\r\nconst actionsList = {\r\n  fetchTickets: actions.fetchTickets,\r\n  refreshSuccess: actions.refreshSuccess,\r\n  requireRefresh: actions.requireRefresh,\r\n  setRefreshTimerId: actions.setRefreshTimerId,\r\n};\r\n\r\nclass TicketsLoader extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchTickets, searchId } = this.props;\r\n    fetchTickets(searchId);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { refreshSuccess, requireRefresh, setRefreshTimerId } = this.props;\r\n    refreshSuccess();\r\n    const refreshTimerId = setTimeout(requireRefresh, TIME_TO_REFRESH);\r\n    setRefreshTimerId({ refreshTimerId });\r\n  }\r\n\r\n  render() {\r\n    const { counter } = this.props;\r\n\r\n    return (\r\n      <div className=\"progress-bar\">\r\n        <Progress\r\n          size=\"tiny\"\r\n          indicating\r\n          value={counter}\r\n          total=\"25\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actionsList)(TicketsLoader);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TicketsLoader from './TicketsLoader';\r\n\r\nconst mapStateToProps = ({ fetchSearchState }) => ({\r\n  fetchSearchState\r\n});\r\n\r\nconst LoadingBar = ({ fetchSearchState }) => {\r\n  const isFetching = fetchSearchState === 'received';\r\n\r\n  return isFetching && <TicketsLoader />;\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoadingBar);\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-grid-system';\r\nimport StopsFilter from './StopsFilter';\r\nimport SortingMenu from './SortingMenu';\r\nimport PageHeader from './PageHeader';\r\nimport TicketsList from './TicketsList';\r\nimport NotifyBar from './NotifyBar';\r\nimport LoadingBar from './LoadingBar';\r\n\r\nconst App = () => (\r\n  <Container>\r\n    <LoadingBar />\r\n    <NotifyBar />\r\n    <Row>\r\n      <Col>\r\n        <PageHeader />\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col sm={12} md={4}>\r\n        <StopsFilter />\r\n      </Col>\r\n      <Col sm={12} md={8}>\r\n        <SortingMenu />\r\n        <TicketsList />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { initSearch } from './actions';\r\nimport reducers from './reducers';\r\nimport { setConfiguration } from 'react-grid-system';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nsetConfiguration({ defaultScreenClass: 'md', gutterWidth: 20 });\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n  ),\r\n);\r\n\r\nstore.dispatch(initSearch());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}